name: Security Analysis

on:
  push:
    branches: [ main ]
  pull_request:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_PATH: 'DictApp/DataDictGen.sln'

jobs:
  security-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      # Analizar cada proyecto por separado
      - name: Run Snyk on Application layer
        uses: snyk/actions/dotnet@master
        with:
          command: test
          args: --file=DictApp/DataDicGen.Application/DataDicGen.Application.csproj --json-file-output=snyk-app-results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk on Tests project
        uses: snyk/actions/dotnet@master
        with:
          command: test
          args: --file=DictApp/DataDicGen.Tests/DataDicGen.Tests.csproj --json-file-output=snyk-tests-results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true  # Los tests pueden tener dependencias de desarrollo

      # Combinar resultados (opcional)
      - name: Combine reports
        run: |
          npm install -g snyk-to-html
          
          # Si ambos reportes existen
          if [ -f "snyk-app-results.json" ] && [ -f "snyk-tests-results.json" ]; then
            jq -s '.[0].vulnerabilities + .[1].vulnerabilities | unique' snyk-app-results.json snyk-tests-results.json > combined-results.json
            snyk-to-html -i combined-results.json -o snyk-report.html
          
          # Si solo existe el de aplicaciÃ³n
          elif [ -f "snyk-app-results.json" ]; then
            snyk-to-html -i snyk-app-results.json -o snyk-report.html
          
          # Si solo existe el de tests
          elif [ -f "snyk-tests-results.json" ]; then
            snyk-to-html -i snyk-tests-results.json -o snyk-report.html
          
          # Si no hay reportes
          else
            echo '{"vulnerabilities": []}' > snyk-report.html
          fi

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: snyk-report.html
