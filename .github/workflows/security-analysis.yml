name: Security Analysis

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_PATH: 'DictApp/DataDictGen.sln'

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: write
  packages: read
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para análisis completo

      # Configuración .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      # Análisis Semgrep (para código fuente)
      - name: Run Semgrep Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/csharp
          paths: DictApp/
          exclude: "**/Migrations/**"
          output_file: semgrep-results.json
          sarif: false
          verbose: true

      - name: Convert Semgrep results
        run: |
          python -m pip install prospector2html
          if [ -f "semgrep-results.json" ]; then
            prospector-html --input semgrep-results.json --output semgrep-report.html --filter semgrep
          else
            echo '{"results": []}' > semgrep-report.html
          fi

      # Análisis Snyk (para dependencias)
      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      # Analizar cada proyecto principal
      - name: Snyk test - Application Layer
        run: |
          snyk test --file=DictApp/DataDictGen.Application/DataDictGen.Application.csproj --json > snyk-app.json || true
          snyk-to-html -i snyk-app.json -o snyk-app-report.html

      - name: Snyk test - Domain Layer
        run: |
          snyk test --file=DictApp/DataDictGen.Domain/DataDictGen.Domain.csproj --json > snyk-domain.json || true
          snyk-to-html -i snyk-domain.json -o snyk-domain-report.html

      - name: Snyk test - Infrastructure
        run: |
          snyk test --file=DictApp/DataDictGen.Infrastructure/DataDictGen.Infrastructure.csproj --json > snyk-infra.json || true
          snyk-to-html -i snyk-infra.json -o snyk-infra-report.html

      # Preparar reportes para GitHub Pages
      - name: Generate index page
        run: |
          mkdir -p public/reports
          cat << 'EOF' > public/index.html
          <!DOCTYPE html>
          <html>
          <head>
              <title>Security Reports</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 20px; }
                  h1 { color: #0366d6; }
                  .report { border: 1px solid #ddd; padding: 15px; margin-bottom: 20px; }
              </style>
          </head>
          <body>
              <h1>Security Analysis Reports</h1>
              <div class="report">
                  <h2>Semgrep Code Analysis</h2>
                  <a href="reports/semgrep-report.html">View Report</a>
              </div>
              <div class="report">
                  <h2>Snyk - Application Layer</h2>
                  <a href="reports/snyk-app-report.html">View Report</a>
              </div>
              <div class="report">
                  <h2>Snyk - Domain Layer</h2>
                  <a href="reports/snyk-domain-report.html">View Report</a>
              </div>
              <div class="report">
                  <h2>Snyk - Infrastructure</h2>
                  <a href="reports/snyk-infra-report.html">View Report</a>
              </div>
          </body>
          </html>
          EOF

      # Mover los reportes generados a la carpeta 'public/reports/'
      - name: Move all reports
        run: |
          mv semgrep-report.html public/reports/
          mv snyk-app-report.html public/reports/
          mv snyk-domain-report.html public/reports/
          mv snyk-infra-report.html public/reports/

      # Verificar el contenido del directorio 'public' antes del despliegue
      - name: List files in public directory
        run: ls -R public

      # Despliegue a GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: public
